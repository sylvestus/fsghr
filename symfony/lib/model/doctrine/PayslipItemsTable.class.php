<?php

/**
 * PayslipItemsTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PayslipItemsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PayslipItemsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PayslipItems');
    }
    
     public static function getItemsFromPayslipNo($payslipno){
           $q = Doctrine_Query::create()
                            ->from('PayslipItems')
                         ->where(" `payslip_id`=$payslipno");
            $q->execute();
        
      return $q->fetchArray();

    }
    public static function getPension($payslipno){
           $q = Doctrine_Query::create()
                     ->select("SUM(amount)")
                            ->from('PayslipItems')
                         ->where(" `payslip_id`=$payslipno")
                   ->andWhere(" `item_name` = 'Pension'");
       
            $q->execute();
        
       $result= $q->fetchArray();
  return $result[0]["SUM"];
    }
    
     public static function getPayslipDeductions($payslipno){
           $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                         ->where(" `payslip_id`=$payslipno")
                   ->andWhere(" `item_type` like '%deduction%' ");
            $q->execute();
      $result= $q->fetchArray();
    return $result[0]["SUM"];

    }
    
    
    public static function getAbsenteePay($payslipno){
           $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                         ->where(" `payslip_id`=$payslipno")
                   ->andWhere(" `item_type` like '%deduction%' ")
           ->andWhere(" `item_name` like '%absentee pay%' ");
            $q->execute();
      $result= $q->fetchArray();
 return $result[0]["SUM"];

    }
    
     public static function getLoanRepaid($payslipno){
           $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                         ->where(" `payslip_id`=$payslipno")
                   ->andWhere(" `item_type` like '%loan%' ");
                      $q->execute();
      $result= $q->fetchArray();
 return $result[0]["SUM"];

    }
    
    /***********payslip items for month************/
    
    //deductions nhif
      public static function  getPayslipNhifForMonth($month,$empnos=""){
          if(is_array($empnos)){
              $employeenumbers= self::implodeCharacters($empnos);
        $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                ->andWhere("`emp_number` IN ($employeenumbers)")
                           ->andWhere("`item_type`= 'deduction'")
                            ->andWhere("`item_name`= 'nhif'");    
          }
          else{
             $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                           ->andWhere("`item_type`= 'deduction'")
              ->andWhere("`item_name`= 'nhif'");
          }    
      $result= $q->fetchArray();
  return $result[0]["SUM"];
    }
    //nssf
     public static function  getPayslipNssfForMonth($month,$empnos=""){
        
          if(is_array($empnos)){
              $employeenumbers=  self::implodeCharacters($empnos);
              
             $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                     ->andWhere("`emp_number` IN ($employeenumbers)")
                           ->andWhere("`item_type`= 'deduction'")
              ->andWhere("`item_name`= 'nssf'");
          }
          else{
             $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                                                ->andWhere("`item_type`= 'deduction'")
              ->andWhere("`item_name`= 'nssf'");  
          }
      $result= $q->fetchArray();
  return $result[0]["SUM"];
    }
    //payeee
     public static function  getPayslipPayeeForMonth($month,$empnos=""){
        
            if(is_array($empnos)){
              $employeenumbers=  self::implodeCharacters($empnos);
             $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                      ->andWhere("`emp_number` IN ($employeenumbers)")
                           ->andWhere("`item_type`= 'deduction'")
              ->andWhere("`item_name`= 'payee'");
              }
            else{
              $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                           ->andWhere("`item_type`= 'deduction'")
              ->andWhere("`item_name`= 'payee'");     
            }
      $result= $q->fetchArray();
     return $result[0]["SUM"];
    }
    
    //absentee pay
     public static function  getPayslipAbsenteePayForMonth($month,$empnos=""){
          if(is_array($empnos)){
              $employeenumbers=  self::implodeCharacters($empnos);
             $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                         ->andWhere("`emp_number` IN ($employeenumbers)")
                           ->andWhere("`item_type`= 'deduction'")
              ->andWhere("`item_name` like 'absentee pay'");
          } else{
            $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                           ->andWhere("`item_type`= 'deduction'")
              ->andWhere("`item_name` like 'absentee pay'");   
          }    
      $result= $q->fetchArray();
 return $result[0]["SUM"];
    }
    //other deductions
    public static function  getOtherDeductionsForMonth($month,$empnos=""){
            if(is_array($empnos)){
              $employeenumbers=  self::implodeCharacters($empnos);
             $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                         ->andWhere("`emp_number` IN ($employeenumbers)")
                           ->andWhere("`item_type` = 'deduction'")
              ->andWhere("`item_name` not like '%absentee pay%'")
                     ->andWhere("`item_name` not like '%payee%'")
                     ->andWhere("`item_name` not like '%nssf%'")
                     ->andWhere("`item_name` not like '%nhif%'")
                     ->andWhere("`item_name` not like '%loan%'");
            } else{
                 $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                                                    ->andWhere("`item_type` = 'deduction'")
              ->andWhere("`item_name` not like '%absentee pay%'")
                     ->andWhere("`item_name` not like '%payee%'")
                     ->andWhere("`item_name` not like '%nssf%'")
                     ->andWhere("`item_name` not like '%nhif%'")
                     ->andWhere("`item_name` not like '%loan%'");
                
            }     
                     
      $result= $q->fetchArray();
     return $result[0]["SUM"];
    }
    
     public static function  getDeductionsForMonth($month,$empno,$deduction){
       
             $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                         ->andWhere("`emp_number` ='$empno'")
                           ->andWhere("`item_type` = 'deduction'")
              ->andWhere("`item_name` like '%$deduction%'");
                    
              
                     
      $result= $q->fetchArray();
     return $result[0]["SUM"];
    }
    
    
    //loan
    
     public static function  getPayslipLoansForMonth($month,$empnos=""){
          if(is_array($empnos)){
              $employeenumbers=  self::implodeCharacters($empnos);
             $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                      ->andWhere("`emp_number` IN ($employeenumbers)")
                           ->andWhere("`item_type`= 'loan'");
          }
          else{
            $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                           ->andWhere("`item_type`= 'loan'");    
          }
      $result= $q->fetchArray();
     return $result[0]["SUM"];
    }
    
    //relief
     public static function  getPayslipReliefForMonth($month,$empnos=""){
              if(is_array($empnos)){
              $employeenumbers=  self::implodeCharacters($empnos);
             $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                        ->andWhere("`emp_number` IN ($employeenumbers)")
                           ->andWhere("`item_type`= 'relief'");
              }
              else{
               $q = Doctrine_Query::create()
                            ->select("SUM(amount)")
                            ->from('PayslipItems')
                           ->where("DATE_FORMAT(`datetime`,'%m/%Y') like '$month'")
                           ->andWhere("`item_type`= 'relief'");    
              }
      $result= $q->fetchArray();
     return $result[0]["SUM"];
    }

    public static function implodeCharacters($empnos){
        return implode(",", $empnos);
    }
    
     public static function deletePayslipsItemsForMonth($yearmonth,$empno=""){
         if(!$empno){
          $q = Doctrine_Query :: create()
                            ->delete()
                            ->from('PayslipItems')
                            ->where("DATE_FORMAT(`datetime`,'%Y-%m') = '$yearmonth'");
         }
 else {
      $q = Doctrine_Query :: create()
                            ->delete()
                            ->from('PayslipItems')
                            ->where("DATE_FORMAT(`datetime`,'%Y-%m') = '$yearmonth'")
              ->andWhere("`emp_number`='$empno'");
 }
                  $result=$q ->execute();  
                  if($result){
                      return TRUE;
                  }
                  else{
                      return FALSE;
                  }
       }
    
    
}
