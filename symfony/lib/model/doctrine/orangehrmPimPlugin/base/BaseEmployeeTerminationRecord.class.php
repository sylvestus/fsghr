<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmEmpTermination', 'doctrine');

/**
 * BaseOhrmEmpTermination
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $emp_number
 * @property integer $reason_id
 * @property date $termination_date
 * @property string $note
 * @property string $overtime_for_months
 * @property string $overtime_amount
 * @property string $pending_leave
 * @property string $pending_leave_amount
 * @property string $payment_upto
 * @property integer $one_month_pay
 * @property string $service_benefit_years
 * @property string $service_benefit_amount
 * @property string $notifice_payment
 * @property string $salary_advance
 * @property string $company_loan
 * @property OhrmEmpTerminationReason $OhrmEmpTerminationReason
 * @property Doctrine_Collection $HsHrEmployee
 * 
 * @method integer                  getId()                       Returns the current record's "id" value
 * @method integer                  getEmpNumber()                Returns the current record's "emp_number" value
 * @method integer                  getReasonId()                 Returns the current record's "reason_id" value
 * @method date                     getTerminationDate()          Returns the current record's "termination_date" value
 * @method string                   getNote()                     Returns the current record's "note" value
 * @method string                   getOvertimeForMonths()        Returns the current record's "overtime_for_months" value
 * @method string                   getOvertimeAmount()           Returns the current record's "overtime_amount" value
 * @method string                   getPendingLeave()             Returns the current record's "pending_leave" value
 * @method string                   getPendingLeaveAmount()       Returns the current record's "pending_leave_amount" value
 * @method string                   getPaymentUpto()              Returns the current record's "payment_upto" value
 * @method integer                  getOneMonthPay()              Returns the current record's "one_month_pay" value
 * @method string                   getServiceBenefitYears()      Returns the current record's "service_benefit_years" value
 * @method string                   getServiceBenefitAmount()     Returns the current record's "service_benefit_amount" value
 * @method string                   getNotificePayment()          Returns the current record's "notifice_payment" value
 * @method string                   getSalaryAdvance()            Returns the current record's "salary_advance" value
 * @method string                   getCompanyLoan()              Returns the current record's "company_loan" value
 * @method OhrmEmpTerminationReason getOhrmEmpTerminationReason() Returns the current record's "OhrmEmpTerminationReason" value
 * @method Doctrine_Collection      getHsHrEmployee()             Returns the current record's "HsHrEmployee" collection
 * @method OhrmEmpTermination       setId()                       Sets the current record's "id" value
 * @method OhrmEmpTermination       setEmpNumber()                Sets the current record's "emp_number" value
 * @method OhrmEmpTermination       setReasonId()                 Sets the current record's "reason_id" value
 * @method OhrmEmpTermination       setTerminationDate()          Sets the current record's "termination_date" value
 * @method OhrmEmpTermination       setNote()                     Sets the current record's "note" value
 * @method OhrmEmpTermination       setOvertimeForMonths()        Sets the current record's "overtime_for_months" value
 * @method OhrmEmpTermination       setOvertimeAmount()           Sets the current record's "overtime_amount" value
 * @method OhrmEmpTermination       setPendingLeave()             Sets the current record's "pending_leave" value
 * @method OhrmEmpTermination       setPendingLeaveAmount()       Sets the current record's "pending_leave_amount" value
 * @method OhrmEmpTermination       setPaymentUpto()              Sets the current record's "payment_upto" value
 * @method OhrmEmpTermination       setOneMonthPay()              Sets the current record's "one_month_pay" value
 * @method OhrmEmpTermination       setServiceBenefitYears()      Sets the current record's "service_benefit_years" value
 * @method OhrmEmpTermination       setServiceBenefitAmount()     Sets the current record's "service_benefit_amount" value
 * @method OhrmEmpTermination       setNotificePayment()          Sets the current record's "notifice_payment" value
 * @method OhrmEmpTermination       setSalaryAdvance()            Sets the current record's "salary_advance" value
 * @method OhrmEmpTermination       setCompanyLoan()              Sets the current record's "company_loan" value
 * @method OhrmEmpTermination       setOhrmEmpTerminationReason() Sets the current record's "OhrmEmpTerminationReason" value
 * @method OhrmEmpTermination       setHsHrEmployee()             Sets the current record's "HsHrEmployee" collection
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEmployeeTerminationRecord extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_emp_termination');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('emp_number', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reason_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('termination_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('note', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('overtime_for_months', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('overtime_amount', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('pending_leave', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('pending_leave_amount', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('payment_upto', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('one_month_pay', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('service_benefit_years', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('service_benefit_amount', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' =>false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('notifice_payment', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('salary_advance', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('company_loan', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('OhrmEmpTerminationReason', array(
             'local' => 'reason_id',
             'foreign' => 'id'));

        $this->hasMany('HsHrEmployee', array(
             'local' => 'id',
             'foreign' => 'termination_id'));
    }
}