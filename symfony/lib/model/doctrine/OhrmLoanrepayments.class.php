<?php

/**
 * OhrmLoanrepayments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    orangehrm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class OhrmLoanrepayments extends BaseOhrmLoanrepayments {

    public static function getPrincipalPaid($loanaccountid) {
        $loanaccountdao = new LoanAccountsDao();
        $loanaccount = $loanaccountdao->getAccountById($loanaccountid);
        $paid = Doctrine_Query::create()->select('sum(principal_paid)')->from('OhrmLoanrepayments')->where('loanaccount_id= ?', $loanaccountid);
        
        $result = $paid->execute(array(), Doctrine::HYDRATE_SCALAR);
       
        return ($result[0]['OhrmLoanrepayments_sum']);
    }

    public static function getInterestPaid($loanacctid) {
        $loanaccountdao = new LoanAccountsDao();
        $loanaccount = $loanaccountdao->getAccountById($loanacctid);
        $paid = Doctrine_Query::create()->select('sum(interest_paid)')->from('OhrmLoanrepayments')->where('loanaccount_id= ?', $loanacctid);

        $result = $paid->execute(array(), Doctrine::HYDRATE_SCALAR);
        return ($result[0]['OhrmLoanrepayments_sum']);
    }

    public static function repayLoan($loanaccountid, $amount, $date,$issettlement=0) {

        $principal_due = round(LoanTransactionsDao::getPrincipalDue($loanaccountid),2);
        
        $interest_due =round(LoanTransactionsDao::getInterestDue($loanaccountid),2);

        $total_due = $principal_due + $interest_due;

        $payamount = $amount;

        do {

            if ($payamount >= $principal_due) {
   
                $loanrepayment = OhrmLoanrepayments::payPrincipal($loanaccountid, $date, $principal_due);
                $payamount = $payamount - $principal_due;
        

                if ($payamount >= $interest_due) {

                    OhrmLoanrepayments::payInterest($loanaccountid, $date, $interest_due);
                    $payamount = $payamount - $interest_due;
                } elseif ($payamount > 0 && $payamount < $interest_due) {

                    OhrmLoanrepayments::payInterest($loanaccountid, $date, $payamount);
                    $payamount = $payamount - $payamount;
                }
            } elseif (($payamount > 0) and ( $payamount < $principal_due)) {

                OhrmLoanrepayments::payInterest($loanaccountid, $date, $interest_due);
                $payamount = $payamount - $interest_due;


                if ($payamount > 0) {

                    OhrmLoanrepayments::payPrincipal($loanaccountid, $date, $payamount);
					$payamount = $payamount - $payamount;
                }
            }
        } while ($payamount > 0);


        LoanTransactionsDao::repayLoan($loanaccountid, $amount, $date,$issettlement);
    }

    public static function payPrincipal($loanaccountid, $date, $principal_due) {

        $repayment = new OhrmLoanrepayments();
        $loanaccountdao = new LoanAccountsDao();
        $loanaccount = $loanaccountdao->getAccountById($loanaccountid);


$repayment->setLoanaccountId($loanaccountid);
        $repayment->setDate($date);
        $repayment->setCreatedAt(date("Y-m-d H:i:s"));
        $repayment->setUpdatedAt(date("Y-m-d H:i:s"));
        $repayment->setPrincipalPaid(round($principal_due));
       $repayment->save();
    
        $account = LoanPostingDao::getPostingAccount($loanaccount->getLoanproductId(), 'principal_repayment');

        $data = array(
            'credit_account' => $account['credit'],
            'debit_account' => $account['debit'],
            'date' => $date,
            'amount' => $principal_due,
            'initiated_by' => 'system',
            'description' => 'principal repayment'
        );


 $journal = new OhrmJournals();


        $journal->journal_entry($data);
    }

    public static function payInterest($loanaccountid, $date, $interest_due) {
        $loanaccountdao = new LoanAccountsDao();
        $loanaccount = $loanaccountdao->getAccountById($loanaccountid);
        $repayment = new OhrmLoanrepayments();

        $repayment->setLoanaccountId($loanaccount->getId());
        //$repayment->loanaccount()->associate($loanaccount);
        $repayment->setDate($date);
        $repayment->setCreatedAt(date("Y-m-d H:i:s"));
        $repayment->setUpdatedAt(date("Y-m-d H:i:s"));
        $repayment->setInterestPaid($interest_due);
        $repayment->save();

        $loanproductdao = new LoanProductsDao();
        $loanproduct = $loanproductdao->getLoanProductById($loanaccount->getLoanproductId());

        $account = LoanPostingDao::getPostingAccount($loanproduct->getId(), 'interest_repayment');

        $data = array(
            'credit_account' => $account['credit'],
            'debit_account' => $account['debit'],
            'date' => $date,
            'amount' => $interest_due,
            'initiated_by' => 'system',
            'description' => 'interest repayment'
        );


        $journal = new OhrmJournals();

        $journal->journal_entry($data);
    }

}
