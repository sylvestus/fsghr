<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmJobInterview', 'doctrine');

/**
 * BaseOhrmJobInterview
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $candidate_vacancy_id
 * @property integer $candidate_id
 * @property string $interview_name
 * @property date $interview_date
 * @property time $interview_time
 * @property string $note
 * @property OhrmJobCandidateVacancy $OhrmJobCandidateVacancy
 * @property OhrmJobCandidate $OhrmJobCandidate
 * @property Doctrine_Collection $OhrmJobCandidateHistory
 * @property Doctrine_Collection $OhrmJobInterviewAttachment
 * @property Doctrine_Collection $OhrmJobInterviewInterviewer
 * 
 * @method integer                 getId()                          Returns the current record's "id" value
 * @method integer                 getCandidateVacancyId()          Returns the current record's "candidate_vacancy_id" value
 * @method integer                 getCandidateId()                 Returns the current record's "candidate_id" value
 * @method string                  getInterviewName()               Returns the current record's "interview_name" value
 * @method date                    getInterviewDate()               Returns the current record's "interview_date" value
 * @method time                    getInterviewTime()               Returns the current record's "interview_time" value
 * @method string                  getNote()                        Returns the current record's "note" value
 * @method OhrmJobCandidateVacancy getOhrmJobCandidateVacancy()     Returns the current record's "OhrmJobCandidateVacancy" value
 * @method OhrmJobCandidate        getOhrmJobCandidate()            Returns the current record's "OhrmJobCandidate" value
 * @method Doctrine_Collection     getOhrmJobCandidateHistory()     Returns the current record's "OhrmJobCandidateHistory" collection
 * @method Doctrine_Collection     getOhrmJobInterviewAttachment()  Returns the current record's "OhrmJobInterviewAttachment" collection
 * @method Doctrine_Collection     getOhrmJobInterviewInterviewer() Returns the current record's "OhrmJobInterviewInterviewer" collection
 * @method OhrmJobInterview        setId()                          Sets the current record's "id" value
 * @method OhrmJobInterview        setCandidateVacancyId()          Sets the current record's "candidate_vacancy_id" value
 * @method OhrmJobInterview        setCandidateId()                 Sets the current record's "candidate_id" value
 * @method OhrmJobInterview        setInterviewName()               Sets the current record's "interview_name" value
 * @method OhrmJobInterview        setInterviewDate()               Sets the current record's "interview_date" value
 * @method OhrmJobInterview        setInterviewTime()               Sets the current record's "interview_time" value
 * @method OhrmJobInterview        setNote()                        Sets the current record's "note" value
 * @method OhrmJobInterview        setOhrmJobCandidateVacancy()     Sets the current record's "OhrmJobCandidateVacancy" value
 * @method OhrmJobInterview        setOhrmJobCandidate()            Sets the current record's "OhrmJobCandidate" value
 * @method OhrmJobInterview        setOhrmJobCandidateHistory()     Sets the current record's "OhrmJobCandidateHistory" collection
 * @method OhrmJobInterview        setOhrmJobInterviewAttachment()  Sets the current record's "OhrmJobInterviewAttachment" collection
 * @method OhrmJobInterview        setOhrmJobInterviewInterviewer() Sets the current record's "OhrmJobInterviewInterviewer" collection
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOhrmJobInterview extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_job_interview');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('candidate_vacancy_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('candidate_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('interview_name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('interview_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('interview_time', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('note', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('OhrmJobCandidateVacancy', array(
             'local' => 'candidate_vacancy_id',
             'foreign' => 'id'));

        $this->hasOne('OhrmJobCandidate', array(
             'local' => 'candidate_id',
             'foreign' => 'id'));

        $this->hasMany('OhrmJobCandidateHistory', array(
             'local' => 'id',
             'foreign' => 'interview_id'));

        $this->hasMany('OhrmJobInterviewAttachment', array(
             'local' => 'id',
             'foreign' => 'interview_id'));

        $this->hasMany('OhrmJobInterviewInterviewer', array(
             'local' => 'id',
             'foreign' => 'interview_id'));
    }
}