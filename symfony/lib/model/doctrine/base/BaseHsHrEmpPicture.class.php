<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('HsHrEmpPicture', 'doctrine');

/**
 * BaseHsHrEmpPicture
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $emp_number
 * @property blob $epic_picture
 * @property string $epic_filename
 * @property string $epic_type
 * @property string $epic_file_size
 * @property string $epic_file_width
 * @property string $epic_file_height
 * @property HsHrEmployee $HsHrEmployee
 * 
 * @method integer        getEmpNumber()        Returns the current record's "emp_number" value
 * @method blob           getEpicPicture()      Returns the current record's "epic_picture" value
 * @method string         getEpicFilename()     Returns the current record's "epic_filename" value
 * @method string         getEpicType()         Returns the current record's "epic_type" value
 * @method string         getEpicFileSize()     Returns the current record's "epic_file_size" value
 * @method string         getEpicFileWidth()    Returns the current record's "epic_file_width" value
 * @method string         getEpicFileHeight()   Returns the current record's "epic_file_height" value
 * @method HsHrEmployee   getHsHrEmployee()     Returns the current record's "HsHrEmployee" value
 * @method HsHrEmpPicture setEmpNumber()        Sets the current record's "emp_number" value
 * @method HsHrEmpPicture setEpicPicture()      Sets the current record's "epic_picture" value
 * @method HsHrEmpPicture setEpicFilename()     Sets the current record's "epic_filename" value
 * @method HsHrEmpPicture setEpicType()         Sets the current record's "epic_type" value
 * @method HsHrEmpPicture setEpicFileSize()     Sets the current record's "epic_file_size" value
 * @method HsHrEmpPicture setEpicFileWidth()    Sets the current record's "epic_file_width" value
 * @method HsHrEmpPicture setEpicFileHeight()   Sets the current record's "epic_file_height" value
 * @method HsHrEmpPicture setHsHrEmployee()     Sets the current record's "HsHrEmployee" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHsHrEmpPicture extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('hs_hr_emp_picture');
        $this->hasColumn('emp_number', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('epic_picture', 'blob', null, array(
             'type' => 'blob',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('epic_filename', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('epic_type', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('epic_file_size', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('epic_file_width', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('epic_file_height', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('HsHrEmployee', array(
             'local' => 'emp_number',
             'foreign' => 'emp_number'));
    }
}