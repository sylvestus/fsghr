<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('EncashLeave', 'doctrine');

/**
 * BaseEncashLeave
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $employee_id
 * @property string $days_encashed
 * @property string $days_remaining
 * @property string $daily_rate
 * @property string $date_effected
 * @property integer $paid_out
 * 
 * @method integer     getId()             Returns the current record's "id" value
 * @method integer     getEmployeeId()     Returns the current record's "employee_id" value
 * @method string      getDaysEncashed()   Returns the current record's "days_encashed" value
 * @method string      getDaysRemaining()  Returns the current record's "days_remaining" value
 * @method string      getDailyRate()      Returns the current record's "daily_rate" value
 * @method string      getDateEffected()   Returns the current record's "date_effected" value
 * @method integer     getPaidOut()        Returns the current record's "paid_out" value
 * @method EncashLeave setId()             Sets the current record's "id" value
 * @method EncashLeave setEmployeeId()     Sets the current record's "employee_id" value
 * @method EncashLeave setDaysEncashed()   Sets the current record's "days_encashed" value
 * @method EncashLeave setDaysRemaining()  Sets the current record's "days_remaining" value
 * @method EncashLeave setDailyRate()      Sets the current record's "daily_rate" value
 * @method EncashLeave setDateEffected()   Sets the current record's "date_effected" value
 * @method EncashLeave setPaidOut()        Sets the current record's "paid_out" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEncashLeave extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('encash_leave');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('employee_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('days_encashed', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('days_remaining', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('daily_rate', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('date_effected', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('paid_out', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}