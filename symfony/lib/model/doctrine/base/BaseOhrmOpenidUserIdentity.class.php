<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmOpenidUserIdentity', 'doctrine');

/**
 * BaseOhrmOpenidUserIdentity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $provider_id
 * @property string $user_identity
 * @property OhrmUser $OhrmUser
 * @property OhrmOpenidProvider $OhrmOpenidProvider
 * 
 * @method integer                getId()                 Returns the current record's "id" value
 * @method integer                getUserId()             Returns the current record's "user_id" value
 * @method integer                getProviderId()         Returns the current record's "provider_id" value
 * @method string                 getUserIdentity()       Returns the current record's "user_identity" value
 * @method OhrmUser               getOhrmUser()           Returns the current record's "OhrmUser" value
 * @method OhrmOpenidProvider     getOhrmOpenidProvider() Returns the current record's "OhrmOpenidProvider" value
 * @method OhrmOpenidUserIdentity setId()                 Sets the current record's "id" value
 * @method OhrmOpenidUserIdentity setUserId()             Sets the current record's "user_id" value
 * @method OhrmOpenidUserIdentity setProviderId()         Sets the current record's "provider_id" value
 * @method OhrmOpenidUserIdentity setUserIdentity()       Sets the current record's "user_identity" value
 * @method OhrmOpenidUserIdentity setOhrmUser()           Sets the current record's "OhrmUser" value
 * @method OhrmOpenidUserIdentity setOhrmOpenidProvider() Sets the current record's "OhrmOpenidProvider" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOhrmOpenidUserIdentity extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_openid_user_identity');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 8,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('provider_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('user_identity', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('OhrmUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('OhrmOpenidProvider', array(
             'local' => 'provider_id',
             'foreign' => 'id'));
    }
}