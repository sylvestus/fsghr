<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmIncidents', 'doctrine');

/**
 * BaseOhrmIncidents
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $employee
 * @property integer $branch
 * @property integer $subunit
 * @property integer $violation
 * @property string $date
 * @property string $appealed
 * @property string $verdict
 * 
 * @method integer       getId()        Returns the current record's "id" value
 * @method integer       getEmployee()  Returns the current record's "employee" value
 * @method integer       getBranch()    Returns the current record's "branch" value
 * @method integer       getSubunit()   Returns the current record's "subunit" value
 * @method integer       getViolation() Returns the current record's "violation" value
 * @method string        getDate()      Returns the current record's "date" value
 * @method string        getAppealed()  Returns the current record's "appealed" value
 * @method string        getVerdict()   Returns the current record's "verdict" value
 * @method OhrmIncidents setId()        Sets the current record's "id" value
 * @method OhrmIncidents setEmployee()  Sets the current record's "employee" value
 * @method OhrmIncidents setBranch()    Sets the current record's "branch" value
 * @method OhrmIncidents setSubunit()   Sets the current record's "subunit" value
 * @method OhrmIncidents setViolation() Sets the current record's "violation" value
 * @method OhrmIncidents setDate()      Sets the current record's "date" value
 * @method OhrmIncidents setAppealed()  Sets the current record's "appealed" value
 * @method OhrmIncidents setVerdict()   Sets the current record's "verdict" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOhrmIncidents extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_incidents');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('employee', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('branch', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('subunit', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('violation', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('date', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('appealed', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('verdict', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}