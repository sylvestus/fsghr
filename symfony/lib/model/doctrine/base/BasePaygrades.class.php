<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Paygrades', 'doctrine');

/**
 * BasePaygrades
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $currency
 * @property decimal $min_salary
 * @property decimal $max_salary
 * 
 * @method integer   getId()         Returns the current record's "id" value
 * @method string    getName()       Returns the current record's "name" value
 * @method string    getCurrency()   Returns the current record's "currency" value
 * @method decimal   getMinSalary()  Returns the current record's "min_salary" value
 * @method decimal   getMaxSalary()  Returns the current record's "max_salary" value
 * @method Paygrades setId()         Sets the current record's "id" value
 * @method Paygrades setName()       Sets the current record's "name" value
 * @method Paygrades setCurrency()   Sets the current record's "currency" value
 * @method Paygrades setMinSalary()  Sets the current record's "min_salary" value
 * @method Paygrades setMaxSalary()  Sets the current record's "max_salary" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePaygrades extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('paygrades');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('currency', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('min_salary', 'decimal', 12, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 12,
             'scale' => '2',
             ));
        $this->hasColumn('max_salary', 'decimal', 12, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 12,
             'scale' => '2',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}