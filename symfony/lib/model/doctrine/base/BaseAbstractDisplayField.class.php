<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AbstractDisplayField', 'doctrine');

/**
 * BaseAbstractDisplayField
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $report_group_id
 * @property string $name
 * @property string $label
 * @property string $field_alias
 * @property string $is_sortable
 * @property string $sort_order
 * @property string $sort_field
 * @property string $element_type
 * @property string $element_property
 * @property string $width
 * @property string $is_exportable
 * @property string $text_alignment_style
 * @property integer $is_value_list
 * @property integer $display_field_group_id
 * @property string $default_value
 * @property integer $is_encrypted
 * @property integer $is_meta
 * 
 * @method integer              getId()                     Returns the current record's "id" value
 * @method integer              getReportGroupId()          Returns the current record's "report_group_id" value
 * @method string               getName()                   Returns the current record's "name" value
 * @method string               getLabel()                  Returns the current record's "label" value
 * @method string               getFieldAlias()             Returns the current record's "field_alias" value
 * @method string               getIsSortable()             Returns the current record's "is_sortable" value
 * @method string               getSortOrder()              Returns the current record's "sort_order" value
 * @method string               getSortField()              Returns the current record's "sort_field" value
 * @method string               getElementType()            Returns the current record's "element_type" value
 * @method string               getElementProperty()        Returns the current record's "element_property" value
 * @method string               getWidth()                  Returns the current record's "width" value
 * @method string               getIsExportable()           Returns the current record's "is_exportable" value
 * @method string               getTextAlignmentStyle()     Returns the current record's "text_alignment_style" value
 * @method integer              getIsValueList()            Returns the current record's "is_value_list" value
 * @method integer              getDisplayFieldGroupId()    Returns the current record's "display_field_group_id" value
 * @method string               getDefaultValue()           Returns the current record's "default_value" value
 * @method integer              getIsEncrypted()            Returns the current record's "is_encrypted" value
 * @method integer              getIsMeta()                 Returns the current record's "is_meta" value
 * @method AbstractDisplayField setId()                     Sets the current record's "id" value
 * @method AbstractDisplayField setReportGroupId()          Sets the current record's "report_group_id" value
 * @method AbstractDisplayField setName()                   Sets the current record's "name" value
 * @method AbstractDisplayField setLabel()                  Sets the current record's "label" value
 * @method AbstractDisplayField setFieldAlias()             Sets the current record's "field_alias" value
 * @method AbstractDisplayField setIsSortable()             Sets the current record's "is_sortable" value
 * @method AbstractDisplayField setSortOrder()              Sets the current record's "sort_order" value
 * @method AbstractDisplayField setSortField()              Sets the current record's "sort_field" value
 * @method AbstractDisplayField setElementType()            Sets the current record's "element_type" value
 * @method AbstractDisplayField setElementProperty()        Sets the current record's "element_property" value
 * @method AbstractDisplayField setWidth()                  Sets the current record's "width" value
 * @method AbstractDisplayField setIsExportable()           Sets the current record's "is_exportable" value
 * @method AbstractDisplayField setTextAlignmentStyle()     Sets the current record's "text_alignment_style" value
 * @method AbstractDisplayField setIsValueList()            Sets the current record's "is_value_list" value
 * @method AbstractDisplayField setDisplayFieldGroupId()    Sets the current record's "display_field_group_id" value
 * @method AbstractDisplayField setDefaultValue()           Sets the current record's "default_value" value
 * @method AbstractDisplayField setIsEncrypted()            Sets the current record's "is_encrypted" value
 * @method AbstractDisplayField setIsMeta()                 Sets the current record's "is_meta" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAbstractDisplayField extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('abstract_display_field');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('report_group_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('label', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('field_alias', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_sortable', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('sort_order', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('sort_field', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('element_type', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('element_property', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('width', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_exportable', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('text_alignment_style', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('is_value_list', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('display_field_group_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('default_value', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_encrypted', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_meta', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}