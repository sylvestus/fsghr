<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AuditTrail', 'doctrine');

/**
 * BaseAuditTrail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $transaction_type
 * @property string $datecreated
 * @property timestamp $dateupdated
 * @property integer $created_by
 * @property integer $approved_by
 * @property integer $approved_by2
 * @property string $module
 * @property string $file1
 * @property string $file2
 * @property integer $approval_levels
 * @property string $previous_value
 * @property string $updated_value
 * @property integer $affected_user
 * @property string $status
 * @property string $comments
 * 
 * @method integer    getId()               Returns the current record's "id" value
 * @method string     getTransactionType()  Returns the current record's "transaction_type" value
 * @method string     getDatecreated()      Returns the current record's "datecreated" value
 * @method timestamp  getDateupdated()      Returns the current record's "dateupdated" value
 * @method integer    getCreatedBy()        Returns the current record's "created_by" value
 * @method integer    getApprovedBy()       Returns the current record's "approved_by" value
 * @method integer    getApprovedBy2()      Returns the current record's "approved_by2" value
 * @method string     getModule()           Returns the current record's "module" value
 * @method string     getFile1()            Returns the current record's "file1" value
 * @method string     getFile2()            Returns the current record's "file2" value
 * @method integer    getApprovalLevels()   Returns the current record's "approval_levels" value
 * @method string     getPreviousValue()    Returns the current record's "previous_value" value
 * @method string     getUpdatedValue()     Returns the current record's "updated_value" value
 * @method integer    getAffectedUser()     Returns the current record's "affected_user" value
 * @method string     getStatus()           Returns the current record's "status" value
 * @method string     getComments()         Returns the current record's "comments" value
 * @method AuditTrail setId()               Sets the current record's "id" value
 * @method AuditTrail setTransactionType()  Sets the current record's "transaction_type" value
 * @method AuditTrail setDatecreated()      Sets the current record's "datecreated" value
 * @method AuditTrail setDateupdated()      Sets the current record's "dateupdated" value
 * @method AuditTrail setCreatedBy()        Sets the current record's "created_by" value
 * @method AuditTrail setApprovedBy()       Sets the current record's "approved_by" value
 * @method AuditTrail setApprovedBy2()      Sets the current record's "approved_by2" value
 * @method AuditTrail setModule()           Sets the current record's "module" value
 * @method AuditTrail setFile1()            Sets the current record's "file1" value
 * @method AuditTrail setFile2()            Sets the current record's "file2" value
 * @method AuditTrail setApprovalLevels()   Sets the current record's "approval_levels" value
 * @method AuditTrail setPreviousValue()    Sets the current record's "previous_value" value
 * @method AuditTrail setUpdatedValue()     Sets the current record's "updated_value" value
 * @method AuditTrail setAffectedUser()     Sets the current record's "affected_user" value
 * @method AuditTrail setStatus()           Sets the current record's "status" value
 * @method AuditTrail setComments()         Sets the current record's "comments" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAuditTrail extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('audit_trail');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('transaction_type', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('datecreated', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('dateupdated', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('approved_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('approved_by2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('module', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('file1', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('file2', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('approval_levels', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('previous_value', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('updated_value', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('affected_user', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('status', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('comments', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}