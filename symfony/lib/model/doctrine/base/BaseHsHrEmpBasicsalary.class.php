<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('HsHrEmpBasicsalary', 'doctrine');

/**
 * BaseHsHrEmpBasicsalary
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $emp_number
 * @property integer $sal_grd_code
 * @property string $currency_id
 * @property string $ebsal_basic_salary
 * @property string $payperiod_code
 * @property string $salary_component
 * @property string $comments
 * @property OhrmPayGrade $OhrmPayGrade
 * @property HsHrCurrencyType $HsHrCurrencyType
 * @property HsHrEmployee $HsHrEmployee
 * @property HsHrPayperiod $HsHrPayperiod
 * @property Doctrine_Collection $HsHrEmpDirectdebit
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getEmpNumber()          Returns the current record's "emp_number" value
 * @method integer             getSalGrdCode()         Returns the current record's "sal_grd_code" value
 * @method string              getCurrencyId()         Returns the current record's "currency_id" value
 * @method string              getEbsalBasicSalary()   Returns the current record's "ebsal_basic_salary" value
 * @method string              getPayperiodCode()      Returns the current record's "payperiod_code" value
 * @method string              getSalaryComponent()    Returns the current record's "salary_component" value
 * @method string              getComments()           Returns the current record's "comments" value
 * @method OhrmPayGrade        getOhrmPayGrade()       Returns the current record's "OhrmPayGrade" value
 * @method HsHrCurrencyType    getHsHrCurrencyType()   Returns the current record's "HsHrCurrencyType" value
 * @method HsHrEmployee        getHsHrEmployee()       Returns the current record's "HsHrEmployee" value
 * @method HsHrPayperiod       getHsHrPayperiod()      Returns the current record's "HsHrPayperiod" value
 * @method Doctrine_Collection getHsHrEmpDirectdebit() Returns the current record's "HsHrEmpDirectdebit" collection
 * @method HsHrEmpBasicsalary  setId()                 Sets the current record's "id" value
 * @method HsHrEmpBasicsalary  setEmpNumber()          Sets the current record's "emp_number" value
 * @method HsHrEmpBasicsalary  setSalGrdCode()         Sets the current record's "sal_grd_code" value
 * @method HsHrEmpBasicsalary  setCurrencyId()         Sets the current record's "currency_id" value
 * @method HsHrEmpBasicsalary  setEbsalBasicSalary()   Sets the current record's "ebsal_basic_salary" value
 * @method HsHrEmpBasicsalary  setPayperiodCode()      Sets the current record's "payperiod_code" value
 * @method HsHrEmpBasicsalary  setSalaryComponent()    Sets the current record's "salary_component" value
 * @method HsHrEmpBasicsalary  setComments()           Sets the current record's "comments" value
 * @method HsHrEmpBasicsalary  setOhrmPayGrade()       Sets the current record's "OhrmPayGrade" value
 * @method HsHrEmpBasicsalary  setHsHrCurrencyType()   Sets the current record's "HsHrCurrencyType" value
 * @method HsHrEmpBasicsalary  setHsHrEmployee()       Sets the current record's "HsHrEmployee" value
 * @method HsHrEmpBasicsalary  setHsHrPayperiod()      Sets the current record's "HsHrPayperiod" value
 * @method HsHrEmpBasicsalary  setHsHrEmpDirectdebit() Sets the current record's "HsHrEmpDirectdebit" collection
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHsHrEmpBasicsalary extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('hs_hr_emp_basicsalary');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('emp_number', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('sal_grd_code', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('currency_id', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('ebsal_basic_salary', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('payperiod_code', 'string', 13, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 13,
             ));
        $this->hasColumn('salary_component', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('comments', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

   public function setUp()
    {
        parent::setUp();
        $this->hasOne('OhrmPayGrade', array(
             'local' => 'sal_grd_code',
             'foreign' => 'id'));

        $this->hasOne('HsHrCurrencyType', array(
             'local' => 'currency_id',
             'foreign' => 'currency_id'));

        $this->hasOne('HsHrEmployee', array(
             'local' => 'emp_number',
             'foreign' => 'emp_number'));

        $this->hasOne('HsHrPayperiod', array(
             'local' => 'payperiod_code',
             'foreign' => 'payperiod_code'));

        $this->hasMany('HsHrEmpDirectdebit', array(
             'local' => 'id',
             'foreign' => 'salary_id'));
    }

}