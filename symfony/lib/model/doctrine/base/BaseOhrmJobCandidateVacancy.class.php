<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmJobCandidateVacancy', 'doctrine');

/**
 * BaseOhrmJobCandidateVacancy
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $candidate_id
 * @property integer $vacancy_id
 * @property string $status
 * @property date $applied_date
 * @property OhrmJobCandidate $OhrmJobCandidate
 * @property OhrmJobVacancy $OhrmJobVacancy
 * @property Doctrine_Collection $OhrmJobInterview
 * 
 * @method integer                 getId()               Returns the current record's "id" value
 * @method integer                 getCandidateId()      Returns the current record's "candidate_id" value
 * @method integer                 getVacancyId()        Returns the current record's "vacancy_id" value
 * @method string                  getStatus()           Returns the current record's "status" value
 * @method date                    getAppliedDate()      Returns the current record's "applied_date" value
 * @method OhrmJobCandidate        getOhrmJobCandidate() Returns the current record's "OhrmJobCandidate" value
 * @method OhrmJobVacancy          getOhrmJobVacancy()   Returns the current record's "OhrmJobVacancy" value
 * @method Doctrine_Collection     getOhrmJobInterview() Returns the current record's "OhrmJobInterview" collection
 * @method OhrmJobCandidateVacancy setId()               Sets the current record's "id" value
 * @method OhrmJobCandidateVacancy setCandidateId()      Sets the current record's "candidate_id" value
 * @method OhrmJobCandidateVacancy setVacancyId()        Sets the current record's "vacancy_id" value
 * @method OhrmJobCandidateVacancy setStatus()           Sets the current record's "status" value
 * @method OhrmJobCandidateVacancy setAppliedDate()      Sets the current record's "applied_date" value
 * @method OhrmJobCandidateVacancy setOhrmJobCandidate() Sets the current record's "OhrmJobCandidate" value
 * @method OhrmJobCandidateVacancy setOhrmJobVacancy()   Sets the current record's "OhrmJobVacancy" value
 * @method OhrmJobCandidateVacancy setOhrmJobInterview() Sets the current record's "OhrmJobInterview" collection
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOhrmJobCandidateVacancy extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_job_candidate_vacancy');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('candidate_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('vacancy_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('status', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('applied_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('OhrmJobCandidate', array(
             'local' => 'candidate_id',
             'foreign' => 'id'));

        $this->hasOne('OhrmJobVacancy', array(
             'local' => 'vacancy_id',
             'foreign' => 'id'));

        $this->hasMany('OhrmJobInterview', array(
             'local' => 'id',
             'foreign' => 'candidate_vacancy_id'));
    }
}