<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmOauthAccessToken', 'doctrine');

/**
 * BaseOhrmOauthAccessToken
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $access_token
 * @property string $client_id
 * @property string $user_id
 * @property timestamp $expires
 * @property string $scope
 * 
 * @method string               getAccessToken()  Returns the current record's "access_token" value
 * @method string               getClientId()     Returns the current record's "client_id" value
 * @method string               getUserId()       Returns the current record's "user_id" value
 * @method timestamp            getExpires()      Returns the current record's "expires" value
 * @method string               getScope()        Returns the current record's "scope" value
 * @method OhrmOauthAccessToken setAccessToken()  Sets the current record's "access_token" value
 * @method OhrmOauthAccessToken setClientId()     Sets the current record's "client_id" value
 * @method OhrmOauthAccessToken setUserId()       Sets the current record's "user_id" value
 * @method OhrmOauthAccessToken setExpires()      Sets the current record's "expires" value
 * @method OhrmOauthAccessToken setScope()        Sets the current record's "scope" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOhrmOauthAccessToken extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_oauth_access_token');
        $this->hasColumn('access_token', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('client_id', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 80,
             ));
        $this->hasColumn('user_id', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('expires', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('scope', 'string', 2000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}