<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmLoanaccounts', 'doctrine');

/**
 * BaseOhrmLoanaccounts
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $emp_number
 * @property integer $loanproduct_id
 * @property integer $is_new_application
 * @property date $application_date
 * @property float $amount_applied
 * @property float $interest_rate
 * @property double $period
 * @property integer $is_approved
 * @property date $date_approved
 * @property float $amount_approved
 * @property integer $is_rejected
 * @property string $rejection_reason
  * @property string $reason_applied
 * @property integer $is_amended
 * @property date $date_amended
 * @property integer $is_disbursed
 * @property float $amount_disbursed
  * @property float $amount_repaid
  * @property integer $repayment_counter
 * @property date $date_disbursed
 * @property date $repayment_start_date
 * @property integer $is_matured
 * @property integer $is_written_off
 * @property integer $is_defaulted
 * @property integer $is_overpaid
 * @property string $account_number
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property double $repayment_duration
 * @property integer $is_top_up
  * @property string $payment_mode
 * @property float $top_up_amount
 * @property OhrmLoanproducts $OhrmLoanproducts
 * @property Doctrine_Collection $OhrmLoanguarantors
 * @property Doctrine_Collection $OhrmLoanrepayments
 * @property Doctrine_Collection $OhrmLoantransactions
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method integer             getEmpNumber()            Returns the current record's "emp_number" value
 * @method integer             getLoanproductId()        Returns the current record's "loanproduct_id" value
 * @method integer             getIsNewApplication()     Returns the current record's "is_new_application" value
 * @method date                getApplicationDate()      Returns the current record's "application_date" value
 * @method float               getAmountApplied()        Returns the current record's "amount_applied" value
 * @method float               getInterestRate()         Returns the current record's "interest_rate" value
 * @method double             getPeriod()               Returns the current record's "period" value
 * @method integer             getIsApproved()           Returns the current record's "is_approved" value
 * @method date                getDateApproved()         Returns the current record's "date_approved" value
 * @method float               getAmountApproved()       Returns the current record's "amount_approved" value
 * @method float               getAmountRepaid()       Returns the current record's "amount_approved" value 
 * @method integer             getIsRejected()           Returns the current record's "is_rejected" value
 * @method integer             getRepaymentCounter()           Returns the current record's 
 * @method string              getRejectionReason()      Returns the current record's "rejection_reason" value
 * @method string              getReasonApplied()      Returns the current record's "rejection_reason" value
 * @method integer             getIsAmended()            Returns the current record's "is_amended" value
 * @method date                getDateAmended()          Returns the current record's "date_amended" value
 * @method integer             getIsDisbursed()          Returns the current record's "is_disbursed" value
 * @method float               getAmountDisbursed()      Returns the current record's "amount_disbursed" value
 * @method date                getDateDisbursed()        Returns the current record's "date_disbursed" value
 * @method date                getRepaymentStartDate()   Returns the current record's "repayment_start_date" value
 * @method integer             getIsMatured()            Returns the current record's "is_matured" value
 * @method integer             getIsWrittenOff()         Returns the current record's "is_written_off" value
 * @method integer             getIsDefaulted()          Returns the current record's "is_defaulted" value
 * @method integer             getIsOverpaid()           Returns the current record's "is_overpaid" value
 * @method string              getAccountNumber()        Returns the current record's "account_number" value
 * @method timestamp           getCreatedAt()            Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()            Returns the current record's "updated_at" value
 * @method double             getRepaymentDuration()    Returns the current record's "repayment_duration" value
 * @method integer             getIsTopUp()              Returns the current record's "is_top_up" value
 * @method float               getTopUpAmount()          Returns the current record's "top_up_amount" value
  * @method string               getPaymentMode()          Returns the current record's "top_up_amount" value
 * @method OhrmLoanproducts    getOhrmLoanproducts()     Returns the current record's "OhrmLoanproducts" value
 * @method Doctrine_Collection getOhrmLoanguarantors()   Returns the current record's "OhrmLoanguarantors" collection
 * @method Doctrine_Collection getOhrmLoanrepayments()   Returns the current record's "OhrmLoanrepayments" collection
 * @method Doctrine_Collection getOhrmLoantransactions() Returns the current record's "OhrmLoantransactions" collection
 * @method OhrmLoanaccounts    setId()                   Sets the current record's "id" value
 * @method OhrmLoanaccounts    setEmpNumber()            Sets the current record's "emp_number" value
 * @method OhrmLoanaccounts    setLoanproductId()        Sets the current record's "loanproduct_id" value
 * @method OhrmLoanaccounts    setIsNewApplication()     Sets the current record's "is_new_application" value
 * @method OhrmLoanaccounts    setApplicationDate()      Sets the current record's "application_date" value
 * @method OhrmLoanaccounts    setAmountApplied()        Sets the current record's "amount_applied" value
 * @method OhrmLoanaccounts    setInterestRate()         Sets the current record's "interest_rate" value
 * @method OhrmLoanaccounts    setPeriod()               Sets the current record's "period" value
 * @method OhrmLoanaccounts    setIsApproved()           Sets the current record's "is_approved" value
 * @method OhrmLoanaccounts    setDateApproved()         Sets the current record's "date_approved" value
 * @method OhrmLoanaccounts    setAmountApproved()       Sets the current record's "amount_approved" value
 * @method OhrmLoanaccounts    setIsRejected()           Sets the current record's "is_rejected" value
 * @method OhrmLoanaccounts    setRejectionReason()      Sets the current record's "rejection_reason" value
  * @method OhrmLoanaccounts    setReasonApplied()      Sets the current record's "rejection_reason" value
 * @method OhrmLoanaccounts    setIsAmended()            Sets the current record's "is_amended" value
 * @method OhrmLoanaccounts    setRepaymentCounter()            Sets the current record's "is_amended" value
 * @method OhrmLoanaccounts    setDateAmended()          Sets the current record's "date_amended" value
 * @method OhrmLoanaccounts    setIsDisbursed()          Sets the current record's "is_disbursed" value
 * @method OhrmLoanaccounts    setAmountDisbursed()      Sets the current record's "amount_disbursed" value
 * @method OhrmLoanaccounts    setAmountRepaid()      Sets the current record's "amount_disbursed" value
 * @method OhrmLoanaccounts    setDateDisbursed()        Sets the current record's "date_disbursed" value
 * @method OhrmLoanaccounts    setRepaymentStartDate()   Sets the current record's "repayment_start_date" value
 * @method OhrmLoanaccounts    setIsMatured()            Sets the current record's "is_matured" value
 * @method OhrmLoanaccounts    setIsWrittenOff()         Sets the current record's "is_written_off" value
 * @method OhrmLoanaccounts    setIsDefaulted()          Sets the current record's "is_defaulted" value
 * @method OhrmLoanaccounts    setIsOverpaid()           Sets the current record's "is_overpaid" value
 * @method OhrmLoanaccounts    setAccountNumber()        Sets the current record's "account_number" value
 * @method OhrmLoanaccounts    setCreatedAt()            Sets the current record's "created_at" value
 * @method OhrmLoanaccounts    setUpdatedAt()            Sets the current record's "updated_at" value
 * @method OhrmLoanaccounts    setRepaymentDuration()    Sets the current record's "repayment_duration" value
 * @method OhrmLoanaccounts    setIsTopUp()              Sets the current record's "is_top_up" value
 * @method OhrmLoanaccounts    setTopUpAmount()          Sets the current record's "top_up_amount" value
 * @method OhrmLoanaccounts    setOhrmLoanproducts()     Sets the current record's "OhrmLoanproducts" value
 * @method OhrmLoanaccounts    setOhrmLoanguarantors()   Sets the current record's "OhrmLoanguarantors" collection
 * @method OhrmLoanaccounts    setOhrmLoanrepayments()   Sets the current record's "OhrmLoanrepayments" collection
 * @method OhrmLoanaccounts    setOhrmLoantransactions() Sets the current record's "OhrmLoantransactions" collection
 *@method OhrmLoanaccounts    setPaymentMode() Sets the current record's "OhrmLoantransactions" collection
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOhrmLoanaccounts extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_loanaccounts');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('emp_number', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('loanproduct_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_new_application', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('application_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('amount_applied', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('interest_rate', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('period', 'double',null, array(
             'type' => 'double',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('is_approved', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('date_approved', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('amount_approved', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('is_rejected', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('rejection_reason', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('payment_mode', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
           $this->hasColumn('reason_applied', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_amended', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('date_amended', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('is_disbursed', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('amount_disbursed', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('amount_repaid', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' =>false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('date_disbursed', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('repayment_start_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('is_matured', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        
         $this->hasColumn('repayment_counter', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => FALSE,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_written_off', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_defaulted', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_overpaid', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('account_number', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('repayment_duration', 'double',null, array(
             'type' => 'double',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('is_top_up', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('top_up_amount', 'float', 15, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.000',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('OhrmLoanproducts', array(
             'local' => 'loanproduct_id',
             'foreign' => 'id'));

        $this->hasMany('OhrmLoanguarantors', array(
             'local' => 'id',
             'foreign' => 'loanaccount_id'));

        $this->hasMany('OhrmLoanrepayments', array(
             'local' => 'id',
             'foreign' => 'loanaccount_id'));

        $this->hasMany('OhrmLoantransactions', array(
             'local' => 'id',
             'foreign' => 'loanaccount_id'));
    }
}