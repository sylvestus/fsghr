<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Messages', 'doctrine');

/**
 * BaseMessages
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $uid1
 * @property integer $uid2
 * @property integer $user1
 * @property integer $user2
 * @property string $msgsubject
 * @property string $body
 * @property string $attachment
 * @property string $user1read
 * @property string $user2read
 * @property timestamp $created
 * 
 * @method integer   getId()         Returns the current record's "id" value
 * @method integer   getUid1()       Returns the current record's "uid1" value
 * @method integer   getUid2()       Returns the current record's "uid2" value
 * @method integer   getUser1()      Returns the current record's "user1" value
 * @method integer   getUser2()      Returns the current record's "user2" value
 * @method string    getMsgsubject() Returns the current record's "msgsubject" value
 * @method string    getBody()       Returns the current record's "body" value
 * @method string    getAttachment() Returns the current record's "attachment" value
 * @method string    getUser1read()  Returns the current record's "user1read" value
 * @method string    getUser2read()  Returns the current record's "user2read" value
 * @method timestamp getCreated()    Returns the current record's "created" value
 * @method Messages  setId()         Sets the current record's "id" value
 * @method Messages  setUid1()       Sets the current record's "uid1" value
 * @method Messages  setUid2()       Sets the current record's "uid2" value
 * @method Messages  setUser1()      Sets the current record's "user1" value
 * @method Messages  setUser2()      Sets the current record's "user2" value
 * @method Messages  setMsgsubject() Sets the current record's "msgsubject" value
 * @method Messages  setBody()       Sets the current record's "body" value
 * @method Messages  setAttachment() Sets the current record's "attachment" value
 * @method Messages  setUser1read()  Sets the current record's "user1read" value
 * @method Messages  setUser2read()  Sets the current record's "user2read" value
 * @method Messages  setCreated()    Sets the current record's "created" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMessages extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('messages');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('uid1', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('uid2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('user1', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('user2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('msgsubject', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('body', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('attachment', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('user1read', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('user2read', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('created', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}