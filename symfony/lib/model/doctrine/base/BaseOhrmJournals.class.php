<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmJournals', 'doctrine');

/**
 * BaseOhrmJournals
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $date
 * @property string $trans_no
 * @property integer $account_id
 * @property float $amount
 * @property string $initiated_by
 * @property string $type
 * @property string $description
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $void
 * @property OhrmAccounts $OhrmAccounts
 * 
 * @method integer      getId()           Returns the current record's "id" value
 * @method date         getDate()         Returns the current record's "date" value
 * @method string       getTransNo()      Returns the current record's "trans_no" value
 * @method integer      getAccountId()    Returns the current record's "account_id" value
 * @method float        getAmount()       Returns the current record's "amount" value
 * @method string       getInitiatedBy()  Returns the current record's "initiated_by" value
 * @method string       getType()         Returns the current record's "type" value
 * @method string       getDescription()  Returns the current record's "description" value
 * @method timestamp    getCreatedAt()    Returns the current record's "created_at" value
 * @method timestamp    getUpdatedAt()    Returns the current record's "updated_at" value
 * @method integer      getVoid()         Returns the current record's "void" value
 * @method OhrmAccounts getOhrmAccounts() Returns the current record's "OhrmAccounts" value
 * @method OhrmJournals setId()           Sets the current record's "id" value
 * @method OhrmJournals setDate()         Sets the current record's "date" value
 * @method OhrmJournals setTransNo()      Sets the current record's "trans_no" value
 * @method OhrmJournals setAccountId()    Sets the current record's "account_id" value
 * @method OhrmJournals setAmount()       Sets the current record's "amount" value
 * @method OhrmJournals setInitiatedBy()  Sets the current record's "initiated_by" value
 * @method OhrmJournals setType()         Sets the current record's "type" value
 * @method OhrmJournals setDescription()  Sets the current record's "description" value
 * @method OhrmJournals setCreatedAt()    Sets the current record's "created_at" value
 * @method OhrmJournals setUpdatedAt()    Sets the current record's "updated_at" value
 * @method OhrmJournals setVoid()         Sets the current record's "void" value
 * @method OhrmJournals setOhrmAccounts() Sets the current record's "OhrmAccounts" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOhrmJournals extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_journals');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('trans_no', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('account_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('amount', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('initiated_by', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('void', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('OhrmAccounts', array(
             'local' => 'account_id',
             'foreign' => 'id'));
    }
}