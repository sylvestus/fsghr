<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmOperationalCountry', 'doctrine');

/**
 * BaseOhrmOperationalCountry
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $country_code
 * @property HsHrCountry $HsHrCountry
 * @property Doctrine_Collection $OhrmHoliday
 * @property Doctrine_Collection $OhrmLeaveType
 * @property Doctrine_Collection $OhrmWorkWeek
 * 
 * @method integer                getId()            Returns the current record's "id" value
 * @method string                 getCountryCode()   Returns the current record's "country_code" value
 * @method HsHrCountry            getHsHrCountry()   Returns the current record's "HsHrCountry" value
 * @method Doctrine_Collection    getOhrmHoliday()   Returns the current record's "OhrmHoliday" collection
 * @method Doctrine_Collection    getOhrmLeaveType() Returns the current record's "OhrmLeaveType" collection
 * @method Doctrine_Collection    getOhrmWorkWeek()  Returns the current record's "OhrmWorkWeek" collection
 * @method OhrmOperationalCountry setId()            Sets the current record's "id" value
 * @method OhrmOperationalCountry setCountryCode()   Sets the current record's "country_code" value
 * @method OhrmOperationalCountry setHsHrCountry()   Sets the current record's "HsHrCountry" value
 * @method OhrmOperationalCountry setOhrmHoliday()   Sets the current record's "OhrmHoliday" collection
 * @method OhrmOperationalCountry setOhrmLeaveType() Sets the current record's "OhrmLeaveType" collection
 * @method OhrmOperationalCountry setOhrmWorkWeek()  Sets the current record's "OhrmWorkWeek" collection
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOhrmOperationalCountry extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_operational_country');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('country_code', 'string', 2, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('HsHrCountry', array(
             'local' => 'country_code',
             'foreign' => 'cou_code'));

        $this->hasMany('OhrmHoliday', array(
             'local' => 'id',
             'foreign' => 'operational_country_id'));

        $this->hasMany('OhrmLeaveType', array(
             'local' => 'id',
             'foreign' => 'operational_country_id'));

        $this->hasMany('OhrmWorkWeek', array(
             'local' => 'id',
             'foreign' => 'operational_country_id'));
    }
}