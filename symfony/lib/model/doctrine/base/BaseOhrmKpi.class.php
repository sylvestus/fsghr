<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmKpi', 'doctrine');

/**
 * BaseOhrmKpi
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $job_title_code
 * @property string $kpi_indicators
 * @property integer $min_rating
 * @property integer $max_rating
 * @property integer $default_kpi
 * @property timestamp $deleted_at
 * 
 * @method integer   getId()             Returns the current record's "id" value
 * @method string    getJobTitleCode()   Returns the current record's "job_title_code" value
 * @method string    getKpiIndicators()  Returns the current record's "kpi_indicators" value
 * @method integer   getMinRating()      Returns the current record's "min_rating" value
 * @method integer   getMaxRating()      Returns the current record's "max_rating" value
 * @method integer   getDefaultKpi()     Returns the current record's "default_kpi" value
 * @method timestamp getDeletedAt()      Returns the current record's "deleted_at" value
 * @method OhrmKpi   setId()             Sets the current record's "id" value
 * @method OhrmKpi   setJobTitleCode()   Sets the current record's "job_title_code" value
 * @method OhrmKpi   setKpiIndicators()  Sets the current record's "kpi_indicators" value
 * @method OhrmKpi   setMinRating()      Sets the current record's "min_rating" value
 * @method OhrmKpi   setMaxRating()      Sets the current record's "max_rating" value
 * @method OhrmKpi   setDefaultKpi()     Sets the current record's "default_kpi" value
 * @method OhrmKpi   setDeletedAt()      Sets the current record's "deleted_at" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOhrmKpi extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_kpi');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('job_title_code', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('kpi_indicators', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('min_rating', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('max_rating', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('default_kpi', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}