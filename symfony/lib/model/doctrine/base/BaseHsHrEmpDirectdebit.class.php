<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('HsHrEmpDirectdebit', 'doctrine');

/**
 * BaseHsHrEmpDirectdebit
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $salary_id
 * @property string $emp_number
 * @property integer $dd_bank
 * @property integer $dd_bankbranch
 * @property integer $dd_routing_num
 * @property string $dd_account
 * @property decimal $dd_amount
 * @property string $dd_account_type
 * @property string $dd_transaction_type
 * @property HsHrEmpBasicsalary $HsHrEmpBasicsalary
 * 
 * @method integer            getId()                  Returns the current record's "id" value
 * @method integer            getSalaryId()            Returns the current record's "salary_id" value
 * @method string             getEmpNumber()           Returns the current record's "emp_number" value
 * @method integer            getDdBank()              Returns the current record's "dd_bank" value
 * @method integer            getDdBankbranch()        Returns the current record's "dd_bankbranch" value
 * @method integer            getDdRoutingNum()        Returns the current record's "dd_routing_num" value
 * @method string             getDdAccount()           Returns the current record's "dd_account" value
 * @method decimal            getDdAmount()            Returns the current record's "dd_amount" value
 * @method string             getDdAccountType()       Returns the current record's "dd_account_type" value
 * @method string             getDdTransactionType()   Returns the current record's "dd_transaction_type" value
 * @method HsHrEmpBasicsalary getHsHrEmpBasicsalary()  Returns the current record's "HsHrEmpBasicsalary" value
 * @method HsHrEmpDirectdebit setId()                  Sets the current record's "id" value
 * @method HsHrEmpDirectdebit setSalaryId()            Sets the current record's "salary_id" value
 * @method HsHrEmpDirectdebit setEmpNumber()           Sets the current record's "emp_number" value
 * @method HsHrEmpDirectdebit setDdBank()              Sets the current record's "dd_bank" value
 * @method HsHrEmpDirectdebit setDdBankbranch()        Sets the current record's "dd_bankbranch" value
 * @method HsHrEmpDirectdebit setDdRoutingNum()        Sets the current record's "dd_routing_num" value
 * @method HsHrEmpDirectdebit setDdAccount()           Sets the current record's "dd_account" value
 * @method HsHrEmpDirectdebit setDdAmount()            Sets the current record's "dd_amount" value
 * @method HsHrEmpDirectdebit setDdAccountType()       Sets the current record's "dd_account_type" value
 * @method HsHrEmpDirectdebit setDdTransactionType()   Sets the current record's "dd_transaction_type" value
 * @method HsHrEmpDirectdebit setHsHrEmpBasicsalary()  Sets the current record's "HsHrEmpBasicsalary" value
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHsHrEmpDirectdebit extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('hs_hr_emp_directdebit');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('salary_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('emp_number', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('dd_bank', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('dd_bankbranch', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('dd_routing_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('dd_account', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('dd_amount', 'decimal', 11, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 11,
             'scale' => '2',
             ));
        $this->hasColumn('dd_account_type', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('dd_transaction_type', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('HsHrEmpBasicsalary', array(
             'local' => 'salary_id',
             'foreign' => 'id'));
    }
}