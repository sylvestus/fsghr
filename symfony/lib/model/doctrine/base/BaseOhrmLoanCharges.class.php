<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OhrmLoanCharges', 'doctrine');

/**
 * BaseOhrmLoanCharges
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $category
 * @property string $calculation_method
 * @property string $payment_method
 * @property string $percentage_of
 * @property float $amount
 * @property integer $fee
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $disabled
 * @property Doctrine_Collection $OhrmChargeLoanproduct
 * 
 * @method integer             getId()                    Returns the current record's "id" value
 * @method string              getName()                  Returns the current record's "name" value
 * @method string              getCategory()              Returns the current record's "category" value
 * @method string              getCalculationMethod()     Returns the current record's "calculation_method" value
 * @method string              getPaymentMethod()         Returns the current record's "payment_method" value
 * @method string              getPercentageOf()          Returns the current record's "percentage_of" value
 * @method float               getAmount()                Returns the current record's "amount" value
 * @method integer             getFee()                   Returns the current record's "fee" value
 * @method timestamp           getCreatedAt()             Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()             Returns the current record's "updated_at" value
 * @method integer             getDisabled()              Returns the current record's "disabled" value
 * @method Doctrine_Collection getOhrmChargeLoanproduct() Returns the current record's "OhrmChargeLoanproduct" collection
 * @method OhrmLoanCharges     setId()                    Sets the current record's "id" value
 * @method OhrmLoanCharges     setName()                  Sets the current record's "name" value
 * @method OhrmLoanCharges     setCategory()              Sets the current record's "category" value
 * @method OhrmLoanCharges     setCalculationMethod()     Sets the current record's "calculation_method" value
 * @method OhrmLoanCharges     setPaymentMethod()         Sets the current record's "payment_method" value
 * @method OhrmLoanCharges     setPercentageOf()          Sets the current record's "percentage_of" value
 * @method OhrmLoanCharges     setAmount()                Sets the current record's "amount" value
 * @method OhrmLoanCharges     setFee()                   Sets the current record's "fee" value
 * @method OhrmLoanCharges     setCreatedAt()             Sets the current record's "created_at" value
 * @method OhrmLoanCharges     setUpdatedAt()             Sets the current record's "updated_at" value
 * @method OhrmLoanCharges     setDisabled()              Sets the current record's "disabled" value
 * @method OhrmLoanCharges     setOhrmChargeLoanproduct() Sets the current record's "OhrmChargeLoanproduct" collection
 * 
 * @package    orangehrm
 * @subpackage model\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOhrmLoanCharges extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_loan_charges');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('category', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('calculation_method', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('payment_method', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'cash',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('percentage_of', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('amount', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fee', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('disabled', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('OhrmChargeLoanproduct', array(
             'local' => 'id',
             'foreign' => 'charge_id'));
    }
}